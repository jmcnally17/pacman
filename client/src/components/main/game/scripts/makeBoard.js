import makeBoundaries from "./boundaries/makeBoundaries";
import makePellets from "./pellets/makePellets";
import makePowerUps from "./powerUps/makePowerUps";
import makeGhosts from "./ghosts/makeGhosts";
import makePacman from "./pacman/makePacman";
import implementBoundaries from "./boundaries/implementBoundaries";
import implementPellets from "./pellets/implementPellets";
import implementPowerUps from "./powerUps/implementPowerUps";
import implementGhosts from "./ghosts/implementGhosts";
import implementPacman from "./pacman/implementPacman";
import displayScore from "./displayScore";
import displayLives from "./displayLives";
import displayLevel from "./displayLevel";

const length = 20;
const map = [
  ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-"],
  ["-", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "-", "-", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "-"],
  ["-", ".", "-", "-", "-", "-", ".", "-", "-", "-", "-", "-", ".", "-", "-", ".", "-", "-", "-", "-", "-", ".", "-", "-", "-", "-", ".", "-"],
  ["-", "o", "-", "-", "-", "-", ".", "-", "-", "-", "-", "-", ".", "-", "-", ".", "-", "-", "-", "-", "-", ".", "-", "-", "-", "-", "o", "-"],
  ["-", ".", "-", "-", "-", "-", ".", "-", "-", "-", "-", "-", ".", "-", "-", ".", "-", "-", "-", "-", "-", ".", "-", "-", "-", "-", ".", "-"],
  ["-", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "-"],
  ["-", ".", "-", "-", "-", "-", ".", "-", "-", ".", "-", "-", "-", "-", "-", "-", "-", "-", ".", "-", "-", ".", "-", "-", "-", "-", ".", "-"],
  ["-", ".", "-", "-", "-", "-", ".", "-", "-", ".", "-", "-", "-", "-", "-", "-", "-", "-", ".", "-", "-", ".", "-", "-", "-", "-", ".", "-"],
  ["-", ".", ".", ".", ".", ".", ".", "-", "-", ".", ".", ".", ".", "-", "-", ".", ".", ".", ".", "-", "-", ".", ".", ".", ".", ".", ".", "-"],
  ["-", "-", "-", "-", "-", "-", ".", "-", "-", "-", "-", "-", " ", "-", "-", " ", "-", "-", "-", "-", "-", ".", "-", "-", "-", "-", "-", "-"],
  [" ", " ", " ", " ", " ", "-", ".", "-", "-", "-", "-", "-", " ", "-", "-", " ", "-", "-", "-", "-", "-", ".", "-", " ", " ", " ", " ", " "],
  [" ", " ", " ", " ", " ", "-", ".", "-", "-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-", "-", ".", "-", " ", " ", " ", " ", " "],
  [" ", " ", " ", " ", " ", "-", ".", "-", "-", " ", "-", "-", "-", "-", "-", "-", "-", "-", " ", "-", "-", ".", "-", " ", " ", " ", " ", " "],
  ["-", "-", "-", "-", "-", "-", ".", "-", "-", " ", "-", "-", "-", "-", "-", "-", "-", "-", " ", "-", "-", ".", "-", "-", "-", "-", "-", "-"],
  [" ", " ", " ", " ", " ", " ", ".", " ", " ", " ", "-", "-", "-", "-", "-", "-", "-", "-", " ", " ", " ", ".", " ", " ", " ", " ", " ", " "],
  ["-", "-", "-", "-", "-", "-", ".", "-", "-", " ", "-", "-", "-", "-", "-", "-", "-", "-", " ", "-", "-", ".", "-", "-", "-", "-", "-", "-"],
  [" ", " ", " ", " ", " ", "-", ".", "-", "-", " ", "-", "-", "-", "-", "-", "-", "-", "-", " ", "-", "-", ".", "-", " ", " ", " ", " ", " "],
  [" ", " ", " ", " ", " ", "-", ".", "-", "-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-", "-", ".", "-", " ", " ", " ", " ", " "],
  [" ", " ", " ", " ", " ", "-", ".", "-", "-", " ", "-", "-", "-", "-", "-", "-", "-", "-", " ", "-", "-", ".", "-", " ", " ", " ", " ", " "],
  ["-", "-", "-", "-", "-", "-", ".", "-", "-", " ", "-", "-", "-", "-", "-", "-", "-", "-", " ", "-", "-", ".", "-", "-", "-", "-", "-", "-"],
  ["-", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "-", "-", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "-"],
  ["-", ".", "-", "-", "-", "-", ".", "-", "-", "-", "-", "-", ".", "-", "-", ".", "-", "-", "-", "-", "-", ".", "-", "-", "-", "-", ".", "-"],
  ["-", ".", "-", "-", "-", "-", ".", "-", "-", "-", "-", "-", ".", "-", "-", ".", "-", "-", "-", "-", "-", ".", "-", "-", "-", "-", ".", "-"],
  ["-", "o", ".", ".", "-", "-", ".", ".", ".", ".", ".", ".", ".", " ", " ", ".", ".", ".", ".", ".", ".", ".", "-", "-", ".", ".", "o", "-"],
  ["-", "-", "-", ".", "-", "-", ".", "-", "-", ".", "-", "-", "-", "-", "-", "-", "-", "-", ".", "-", "-", ".", "-", "-", ".", "-", "-", "-"],
  ["-", "-", "-", ".", "-", "-", ".", "-", "-", ".", "-", "-", "-", "-", "-", "-", "-", "-", ".", "-", "-", ".", "-", "-", ".", "-", "-", "-"],
  ["-", ".", ".", ".", ".", ".", ".", "-", "-", ".", ".", ".", ".", "-", "-", ".", ".", ".", ".", "-", "-", ".", ".", ".", ".", ".", ".", "-"],
  ["-", ".", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", ".", "-", "-", ".", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", ".", "-"],
  ["-", ".", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", ".", "-", "-", ".", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", ".", "-"],
  ["-", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "-"],
  ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-"],
];

const boundaries = makeBoundaries(map, length);
const pellets = makePellets(map, length);
const powerUps = makePowerUps(map, length);
const ghosts = makeGhosts();
const pacman = makePacman();

const score = {
  points: 0,
};

const lastKeyPressed = {
  key: "",
};

const level = {
  number: 1,
};

const player = {
  name: "",
}

const reactRoot = {
  mainEl: null,
}

let count = 0;

export default function makeBoard (name, mainEl) {
  if (count === 0) {
    player.name = name;
    reactRoot.mainEl = mainEl;
    count ++;
  }
  let animationId = requestAnimationFrame(makeBoard);
  const board = document.querySelector("#board");
  const ctx = board.getContext("2d");
  ctx.clearRect(0, 0, board.clientWidth, board.clientHeight);

  implementBoundaries(boundaries, ctx, pacman);
  implementPellets(pellets, ctx, pacman, score, lastKeyPressed, ghosts, powerUps, level);
  implementPowerUps(powerUps, ctx, pacman, score, ghosts);
  implementGhosts(ghosts, boundaries, ctx, pacman, score, animationId, lastKeyPressed, player.name, reactRoot.mainEl);
  implementPacman(lastKeyPressed, pacman, boundaries, ctx);
  displayScore(score);
  displayLives(pacman);
  displayLevel(level);
};
